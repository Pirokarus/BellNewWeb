DROP TABLE ORGANIZATION;
DROP SEQUENCE org_seq;

DROP TABLE office;
DROP SEQUENCE office_seq;

DROP TABLE users;
DROP SEQUENCE user_seq;


CREATE TABLE DOCS(
CODE    NUMBER          NOT NULL PRIMARY KEY,
NAME    VARCHAR2(50)    NOT NULL UNIQUE
)

CREATE TABLE COUNTRIES(
CODE    NUMBER          NOT NULL PRIMARY KEY,
NAME    VARCHAR2(50)    NOT NULL UNIQUE
)

CREATE TABLE ORGANIZATION(
ID              NUMBER          NOT NULL PRIMARY KEY,
NAME            VARCHAR2(50)    NOT NULL,
FULL_NAME       VARCHAR2(50)    ,
INN             VARCHAR2(50)    ,
KPP             VARCHAR2(50)    ,
ADDRESS         VARCHAR2(50)    ,
PHONE           VARCHAR2(50)    ,
IS_ACTIVE       NUMBER(1)       NOT NULL
);

CREATE SEQUENCE org_seq START WITH 1;

CREATE OR REPLACE TRIGGER org_bir
BEFORE INSERT ON ORGANIZATION
FOR EACH ROW

BEGIN
  SELECT org_seq.NEXTVAL
  INTO   :new.id
  FROM   dual;
END;


CREATE TABLE OFFICE(
ID              NUMBER          NOT NULL PRIMARY KEY,
NAME            VARCHAR2(50)    NOT NULL,
ORG_ID          NUMBER    ,
ADDRESS         VARCHAR2(50)    ,
PHONE           VARCHAR2(50)    ,
IS_ACTIVE       NUMBER(1)       NOT NULL,
CONSTRAINT fk_org
    FOREIGN KEY (org_id)
    REFERENCES ORGANIZATION(id)
);

CREATE SEQUENCE office_seq START WITH 1;

CREATE OR REPLACE TRIGGER office_bir
BEFORE INSERT ON OFFICE
FOR EACH ROW

BEGIN
  SELECT office_seq.NEXTVAL
  INTO   :new.id
  FROM   dual;
END;



CREATE TABLE USERS(
ID              NUMBER          NOT NULL PRIMARY KEY,
OFFICE_ID       NUMBER    ,
FIRST_NAME            VARCHAR2(50)    NOT NULL,
LAST_NAME            VARCHAR2(50)    NOT NULL,
MIDDLE_NAME            VARCHAR2(50)    ,
POSITION         VARCHAR2(50)    ,
DOC_CODE           NUMBER    ,
CITIZENSHIP_CODE       NUMBER       ,
CONSTRAINT fk_office
    FOREIGN KEY (OFFICE_ID)
    REFERENCES OFFICE(id),
CONSTRAINT fk_doc
    FOREIGN KEY (DOC_CODE)
    REFERENCES DOCS(CODE),
CONSTRAINT fk_countries
    FOREIGN KEY (CITIZENSHIP_CODE)
    REFERENCES COUNTRIES(CODE)
);

CREATE SEQUENCE user_seq START WITH 1;

CREATE OR REPLACE TRIGGER user_bir
BEFORE INSERT ON USERS
FOR EACH ROW

BEGIN
  SELECT user_seq.NEXTVAL
  INTO   :new.id
  FROM   dual;
END;
